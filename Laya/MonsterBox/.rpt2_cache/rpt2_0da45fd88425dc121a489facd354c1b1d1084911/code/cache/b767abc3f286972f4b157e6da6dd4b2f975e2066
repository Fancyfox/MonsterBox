{
  "code": "export default class EventManager {\r\n    static register(eventName, cb, target) {\r\n        if (!this.handle[eventName]) {\r\n            this.handle[eventName] = [];\r\n        }\r\n        const data = { func: cb, target };\r\n        this.handle[eventName].push(data);\r\n    }\r\n    static unRegister(eventName, cb, target) {\r\n        const list = this.handle[eventName];\r\n        if (!list || list.length <= 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n            const event = list[i];\r\n            if (event.func === cb && (!target || target === event.target)) {\r\n                list.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static dispatchEvent(eventName, ...args) {\r\n        const list = this.handle[eventName];\r\n        if (!list || list.length <= 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n            const event = list[i];\r\n            event.func.apply(event.target, args);\r\n        }\r\n    }\r\n    static unRegisterAll() {\r\n        this.handle = {};\r\n    }\r\n}\r\nEventManager.handle = {};\r\n",
  "references": []
}
