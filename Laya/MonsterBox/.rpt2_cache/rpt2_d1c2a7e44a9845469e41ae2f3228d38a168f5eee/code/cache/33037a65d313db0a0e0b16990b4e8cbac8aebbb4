{
  "code": "import { Configuration } from \"../../Data/Configuration\";\r\nimport { Constants } from \"../../Data/Constants\";\r\nimport { SdkUitl } from \"../../Util/SdkUitl\";\r\nexport default class AudioManager {\r\n    constructor() {\r\n        this.audioInfo = null;\r\n    }\r\n    static instance() {\r\n        if (!this._instance) {\r\n            this._instance = new AudioManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n    getAudioData() {\r\n        return this.audioInfo;\r\n    }\r\n    loadFromCache() {\r\n        const audioInfo = Configuration.instance().getConfigData(Constants.AudioConfigID);\r\n        if (audioInfo) {\r\n            this.audioInfo = JSON.parse(audioInfo);\r\n        }\r\n        else {\r\n            this._generateAudio();\r\n        }\r\n    }\r\n    saveAudioInfoToCache() {\r\n        const data = JSON.stringify(this.audioInfo);\r\n        Configuration.instance().setConfigData(Constants.AudioConfigID, data);\r\n    }\r\n    _generateAudio() {\r\n        this.audioInfo = {\r\n            musicMute: false,\r\n            effectMute: false,\r\n            musicVolume: 0.5,\r\n            effectVolume: 0.5,\r\n            vibrate: true\r\n        };\r\n        this.saveAudioInfoToCache();\r\n    }\r\n    playMusic(name) {\r\n        if (this.audioInfo && !this.audioInfo.musicMute) {\r\n            SdkUitl.playMusic(name, true);\r\n        }\r\n    }\r\n    resumeMusic() {\r\n        if (this.audioInfo && !this.audioInfo.musicMute) {\r\n        }\r\n    }\r\n    pasueMusic() {\r\n        if (this.audioInfo && !this.audioInfo.musicMute) {\r\n        }\r\n    }\r\n    stopMusic() {\r\n    }\r\n    setVibrate(vibrate) {\r\n        if (this.audioInfo.vibrate = vibrate) {\r\n            return;\r\n        }\r\n        this.audioInfo.vibrate = vibrate;\r\n        this.saveAudioInfoToCache();\r\n    }\r\n    getVibrate() {\r\n        return this.audioInfo.vibrate;\r\n    }\r\n    setMusicVolume(volume) {\r\n    }\r\n    playEffect(name) {\r\n        if (this.audioInfo && !this.audioInfo.effectMute) {\r\n            const path = `subPackage/sub2/Audio/Effect/${name}.mp3`;\r\n            Laya.SoundManager.playSound(path);\r\n        }\r\n    }\r\n    setAudioMute(mute) {\r\n        if (this.audioInfo.effectMute == mute) {\r\n            return;\r\n        }\r\n        this.audioInfo.effectMute = mute;\r\n        this.audioInfo.musicMute = mute;\r\n        this.saveAudioInfoToCache();\r\n    }\r\n    getAudioMute() {\r\n        return this.audioInfo.effectMute;\r\n    }\r\n    stopAllEffects() {\r\n    }\r\n    setEffectVolume(volume) {\r\n    }\r\n}\r\nAudioManager._instance = null;\r\n",
  "references": [
    "D:/WorkSpace/Laya2.6.1/MonsterBox/src/Data/Configuration.ts",
    "D:/WorkSpace/Laya2.6.1/MonsterBox/src/Data/Constants.ts",
    "D:/WorkSpace/Laya2.6.1/MonsterBox/src/Util/SdkUitl.ts"
  ]
}
