{
  "code": "export var UITYpes;\r\n(function (UITYpes) {\r\n    UITYpes[UITYpes[\"PANEL\"] = 0] = \"PANEL\";\r\n    UITYpes[UITYpes[\"POPUP\"] = 1] = \"POPUP\";\r\n    UITYpes[UITYpes[\"TIP\"] = 2] = \"TIP\";\r\n    UITYpes[UITYpes[\"EFFECT\"] = 3] = \"EFFECT\";\r\n    UITYpes[UITYpes[\"TUTORIAL\"] = 4] = \"TUTORIAL\";\r\n})(UITYpes || (UITYpes = {}));\r\nexport class PanelBase extends Laya.Script {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = UITYpes.PANEL;\r\n        this.isVisible = false;\r\n        this.onShowEnd = null;\r\n    }\r\n    show(...args) {\r\n        this.isVisible = true;\r\n        switch (this.type) {\r\n            case UITYpes.PANEL:\r\n            case UITYpes.POPUP:\r\n                let panel = this.owner;\r\n                panel.scaleX = 0.8;\r\n                panel.scaleY = 0.8;\r\n                Laya.Tween.to(panel, { scaleX: 1.1, scaleY: 1.1 }, 200, null, Laya.Handler.create(this, () => {\r\n                    Laya.Tween.to(panel, { scaleX: 1, scaleY: 1 }, 100, null, Laya.Handler.create(this, () => {\r\n                        if (this.onShowEnd) {\r\n                            this.onShowEnd();\r\n                        }\r\n                    }));\r\n                }));\r\n                break;\r\n        }\r\n    }\r\n    ;\r\n    hide() {\r\n        this.isVisible = false;\r\n    }\r\n    ;\r\n}\r\n",
  "references": []
}
