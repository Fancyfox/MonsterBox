{
  "code": "var Matrix4x4 = Laya.Matrix4x4;\r\nvar Vector3 = Laya.Vector3;\r\nexport default (function () {\r\n    var _v1 = new Vector3();\r\n    var _m1 = new Laya.Matrix4x4();\r\n    var _zero = new Vector3(0, 0, 0);\r\n    var _one = new Vector3(1, 1, 1);\r\n    var _x = new Vector3();\r\n    var _y = new Vector3();\r\n    var _z = new Vector3();\r\n    Matrix4x4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n        var self = this;\r\n        var te = self.elements;\r\n        te[0] = n11;\r\n        te[4] = n12;\r\n        te[8] = n13;\r\n        te[12] = n14;\r\n        te[1] = n21;\r\n        te[5] = n22;\r\n        te[9] = n23;\r\n        te[13] = n24;\r\n        te[2] = n31;\r\n        te[6] = n32;\r\n        te[10] = n33;\r\n        te[14] = n34;\r\n        te[3] = n41;\r\n        te[7] = n42;\r\n        te[11] = n43;\r\n        te[15] = n44;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.copy = function (m) {\r\n        var te = this.elements;\r\n        var me = m.elements;\r\n        te[0] = me[0];\r\n        te[1] = me[1];\r\n        te[2] = me[2];\r\n        te[3] = me[3];\r\n        te[4] = me[4];\r\n        te[5] = me[5];\r\n        te[6] = me[6];\r\n        te[7] = me[7];\r\n        te[8] = me[8];\r\n        te[9] = me[9];\r\n        te[10] = me[10];\r\n        te[11] = me[11];\r\n        te[12] = me[12];\r\n        te[13] = me[13];\r\n        te[14] = me[14];\r\n        te[15] = me[15];\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.copyPosition = function (m) {\r\n        var te = this.elements, me = m.elements;\r\n        te[12] = me[12];\r\n        te[13] = me[13];\r\n        te[14] = me[14];\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.extractBasis = function (xAxis, yAxis, zAxis) {\r\n        xAxis.setFromMatrixColumn(this, 0);\r\n        yAxis.setFromMatrixColumn(this, 1);\r\n        zAxis.setFromMatrixColumn(this, 2);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeBasis = function (xAxis, yAxis, zAxis) {\r\n        this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.extractRotation = function (m) {\r\n        var te = this.elements;\r\n        var me = m.elements;\r\n        var scaleX = 1 / _v1.setFromMatrixColumn(m, 0).magnitude();\r\n        var scaleY = 1 / _v1.setFromMatrixColumn(m, 1).magnitude();\r\n        var scaleZ = 1 / _v1.setFromMatrixColumn(m, 2).magnitude();\r\n        te[0] = me[0] * scaleX;\r\n        te[1] = me[1] * scaleX;\r\n        te[2] = me[2] * scaleX;\r\n        te[3] = 0;\r\n        te[4] = me[4] * scaleY;\r\n        te[5] = me[5] * scaleY;\r\n        te[6] = me[6] * scaleY;\r\n        te[7] = 0;\r\n        te[8] = me[8] * scaleZ;\r\n        te[9] = me[9] * scaleZ;\r\n        te[10] = me[10] * scaleZ;\r\n        te[11] = 0;\r\n        te[12] = 0;\r\n        te[13] = 0;\r\n        te[14] = 0;\r\n        te[15] = 1;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationFromEuler = function (euler) {\r\n        var te = this.elements;\r\n        var x = euler.x, y = euler.y, z = euler.z;\r\n        var a = Math.cos(x), b = Math.sin(x);\r\n        var c = Math.cos(y), d = Math.sin(y);\r\n        var e = Math.cos(z), f = Math.sin(z);\r\n        var ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n        te[0] = c * e;\r\n        te[4] = -c * f;\r\n        te[8] = d;\r\n        te[1] = af + be * d;\r\n        te[5] = ae - bf * d;\r\n        te[9] = -b * c;\r\n        te[2] = bf - ae * d;\r\n        te[6] = be + af * d;\r\n        te[10] = a * c;\r\n        te[3] = 0;\r\n        te[7] = 0;\r\n        te[11] = 0;\r\n        te[12] = 0;\r\n        te[13] = 0;\r\n        te[14] = 0;\r\n        te[15] = 1;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationFromQuaternion = function (q) {\r\n        return this.compose(_zero, q, _one);\r\n    };\r\n    Matrix4x4.prototype.lookAt = function (eye, target, up) {\r\n        var te = this.elements;\r\n        eye.vsub(target, _z);\r\n        if (_z.magnitudeSquared() === 0) {\r\n            _z.z = 1;\r\n        }\r\n        _z.normalize();\r\n        up.cross(_z, _x);\r\n        if (_x.magnitudeSquared() === 0) {\r\n            if (Math.abs(up.z) === 1) {\r\n                _z.x += 0.0001;\r\n            }\r\n            else {\r\n                _z.z += 0.0001;\r\n            }\r\n            _z.normalize();\r\n            up.cross(_z, _x);\r\n        }\r\n        _x.normalize();\r\n        _z.cross(_x, _y);\r\n        te[0] = _x.x;\r\n        te[4] = _y.x;\r\n        te[8] = _z.x;\r\n        te[1] = _x.y;\r\n        te[5] = _y.y;\r\n        te[9] = _z.y;\r\n        te[2] = _x.z;\r\n        te[6] = _y.z;\r\n        te[10] = _z.z;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.multiply = function (m) {\r\n        return this.multiplyMatrices(this, m);\r\n    };\r\n    Matrix4x4.prototype.premultiply = function (m) {\r\n        return this.multiplyMatrices(m, this);\r\n    };\r\n    Matrix4x4.prototype.multiplyMatrices = function (a, b) {\r\n        var ae = a.elements;\r\n        var be = b.elements;\r\n        var te = this.elements;\r\n        var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\r\n        var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\r\n        var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\r\n        var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\r\n        var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\r\n        var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\r\n        var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\r\n        var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\r\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.multiplyScalar = function (s) {\r\n        var te = this.elements;\r\n        te[0] *= s;\r\n        te[4] *= s;\r\n        te[8] *= s;\r\n        te[12] *= s;\r\n        te[1] *= s;\r\n        te[5] *= s;\r\n        te[9] *= s;\r\n        te[13] *= s;\r\n        te[2] *= s;\r\n        te[6] *= s;\r\n        te[10] *= s;\r\n        te[14] *= s;\r\n        te[3] *= s;\r\n        te[7] *= s;\r\n        te[11] *= s;\r\n        te[15] *= s;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.determinant = function () {\r\n        var te = this.elements;\r\n        var n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\r\n        var n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\r\n        var n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\r\n        var n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\r\n        return (n41 * (+n14 * n23 * n32\r\n            - n13 * n24 * n32\r\n            - n14 * n22 * n33\r\n            + n12 * n24 * n33\r\n            + n13 * n22 * n34\r\n            - n12 * n23 * n34) +\r\n            n42 * (+n11 * n23 * n34\r\n                - n11 * n24 * n33\r\n                + n14 * n21 * n33\r\n                - n13 * n21 * n34\r\n                + n13 * n24 * n31\r\n                - n14 * n23 * n31) +\r\n            n43 * (+n11 * n24 * n32\r\n                - n11 * n22 * n34\r\n                - n14 * n21 * n32\r\n                + n12 * n21 * n34\r\n                + n14 * n22 * n31\r\n                - n12 * n24 * n31) +\r\n            n44 * (-n13 * n22 * n31\r\n                - n11 * n23 * n32\r\n                + n11 * n22 * n33\r\n                + n13 * n21 * n32\r\n                - n12 * n21 * n33\r\n                + n12 * n23 * n31));\r\n    };\r\n    Matrix4x4.prototype.transpose = function () {\r\n        var te = this.elements;\r\n        var tmp;\r\n        tmp = te[1];\r\n        te[1] = te[4];\r\n        te[4] = tmp;\r\n        tmp = te[2];\r\n        te[2] = te[8];\r\n        te[8] = tmp;\r\n        tmp = te[6];\r\n        te[6] = te[9];\r\n        te[9] = tmp;\r\n        tmp = te[3];\r\n        te[3] = te[12];\r\n        te[12] = tmp;\r\n        tmp = te[7];\r\n        te[7] = te[13];\r\n        te[13] = tmp;\r\n        tmp = te[11];\r\n        te[11] = te[14];\r\n        te[14] = tmp;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.setPosition = function (x, y, z) {\r\n        var te = this.elements;\r\n        if (x instanceof Laya.Vector3) {\r\n            te[12] = x.x;\r\n            te[13] = x.y;\r\n            te[14] = x.z;\r\n        }\r\n        else {\r\n            te[12] = x;\r\n            te[13] = y;\r\n            te[14] = z;\r\n        }\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.getInverse = function (m) {\r\n        var te = this.elements, me = m.elements, n11 = me[0], n21 = me[1], n31 = me[2], n41 = me[3], n12 = me[4], n22 = me[5], n32 = me[6], n42 = me[7], n13 = me[8], n23 = me[9], n33 = me[10], n43 = me[11], n14 = me[12], n24 = me[13], n34 = me[14], n44 = me[15], t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44, t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44, t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44, t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n        var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n        if (det === 0)\r\n            return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n        var detInv = 1 / det;\r\n        te[0] = t11 * detInv;\r\n        te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\r\n        te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\r\n        te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\r\n        te[4] = t12 * detInv;\r\n        te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\r\n        te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\r\n        te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\r\n        te[8] = t13 * detInv;\r\n        te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\r\n        te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\r\n        te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\r\n        te[12] = t14 * detInv;\r\n        te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\r\n        te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\r\n        te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.scale = function (v) {\r\n        var te = this.elements;\r\n        var x = v.x, y = v.y, z = v.z;\r\n        te[0] *= x;\r\n        te[4] *= y;\r\n        te[8] *= z;\r\n        te[1] *= x;\r\n        te[5] *= y;\r\n        te[9] *= z;\r\n        te[2] *= x;\r\n        te[6] *= y;\r\n        te[10] *= z;\r\n        te[3] *= x;\r\n        te[7] *= y;\r\n        te[11] *= z;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.getMaxScaleOnAxis = function () {\r\n        var te = this.elements;\r\n        var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n        var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n        var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n        return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n    };\r\n    Matrix4x4.prototype.makeTranslation = function (x, y, z) {\r\n        this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationX = function (theta) {\r\n        var c = Math.cos(theta), s = Math.sin(theta);\r\n        this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationY = function (theta) {\r\n        var c = Math.cos(theta), s = Math.sin(theta);\r\n        this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationZ = function (theta) {\r\n        var c = Math.cos(theta), s = Math.sin(theta);\r\n        this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeRotationAxis = function (axis, angle) {\r\n        var c = Math.cos(angle);\r\n        var s = Math.sin(angle);\r\n        var t = 1 - c;\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var tx = t * x, ty = t * y;\r\n        this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeScale = function (x, y, z) {\r\n        this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.makeShear = function (x, y, z) {\r\n        this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.compose = function (position, quaternion, scale) {\r\n        var te = this.elements;\r\n        var x = quaternion.x, y = quaternion.y, z = quaternion.z, w = quaternion.w;\r\n        var x2 = x + x, y2 = y + y, z2 = z + z;\r\n        var xx = x * x2, xy = x * y2, xz = x * z2;\r\n        var yy = y * y2, yz = y * z2, zz = z * z2;\r\n        var wx = w * x2, wy = w * y2, wz = w * z2;\r\n        var sx = scale.x, sy = scale.y, sz = scale.z;\r\n        te[0] = (1 - (yy + zz)) * sx;\r\n        te[1] = (xy + wz) * sx;\r\n        te[2] = (xz - wy) * sx;\r\n        te[3] = 0;\r\n        te[4] = (xy - wz) * sy;\r\n        te[5] = (1 - (xx + zz)) * sy;\r\n        te[6] = (yz + wx) * sy;\r\n        te[7] = 0;\r\n        te[8] = (xz + wy) * sz;\r\n        te[9] = (yz - wx) * sz;\r\n        te[10] = (1 - (xx + yy)) * sz;\r\n        te[11] = 0;\r\n        te[12] = position.x;\r\n        te[13] = position.y;\r\n        te[14] = position.z;\r\n        te[15] = 1;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.decompose = function (position, quaternion, scale) {\r\n        var te = this.elements;\r\n        var sx = _v1.set(te[0], te[1], te[2]).magnitude();\r\n        var sy = _v1.set(te[4], te[5], te[6]).magnitude();\r\n        var sz = _v1.set(te[8], te[9], te[10]).magnitude();\r\n        var det = this.determinant();\r\n        if (det < 0)\r\n            sx = -sx;\r\n        position.x = te[12];\r\n        position.y = te[13];\r\n        position.z = te[14];\r\n        _m1.copy(this);\r\n        var invSX = 1 / sx;\r\n        var invSY = 1 / sy;\r\n        var invSZ = 1 / sz;\r\n        _m1.elements[0] *= invSX;\r\n        _m1.elements[1] *= invSX;\r\n        _m1.elements[2] *= invSX;\r\n        _m1.elements[4] *= invSY;\r\n        _m1.elements[5] *= invSY;\r\n        _m1.elements[6] *= invSY;\r\n        _m1.elements[8] *= invSZ;\r\n        _m1.elements[9] *= invSZ;\r\n        _m1.elements[10] *= invSZ;\r\n        quaternion.setFromRotationMatrix(_m1);\r\n        scale.x = sx;\r\n        scale.y = sy;\r\n        scale.z = sz;\r\n        return this;\r\n    };\r\n    Matrix4x4.prototype.equals = function (matrix) {\r\n        var te = this.elements;\r\n        var me = matrix.elements;\r\n        for (var i = 0; i < 16; i++) {\r\n            if (te[i] !== me[i])\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    Matrix4x4.prototype.toArray = function (array, offset) {\r\n        if (array === undefined)\r\n            array = [];\r\n        if (offset === undefined)\r\n            offset = 0;\r\n        var te = this.elements;\r\n        array[offset] = te[0];\r\n        array[offset + 1] = te[1];\r\n        array[offset + 2] = te[2];\r\n        array[offset + 3] = te[3];\r\n        array[offset + 4] = te[4];\r\n        array[offset + 5] = te[5];\r\n        array[offset + 6] = te[6];\r\n        array[offset + 7] = te[7];\r\n        array[offset + 8] = te[8];\r\n        array[offset + 9] = te[9];\r\n        array[offset + 10] = te[10];\r\n        array[offset + 11] = te[11];\r\n        array[offset + 12] = te[12];\r\n        array[offset + 13] = te[13];\r\n        array[offset + 14] = te[14];\r\n        array[offset + 15] = te[15];\r\n        return array;\r\n    };\r\n    Matrix4x4.prototype.fromArray = function (array, offset) {\r\n        if (offset === undefined)\r\n            offset = 0;\r\n        for (var i = 0; i < 16; i++) {\r\n            this.elements[i] = array[i + offset];\r\n        }\r\n        return this;\r\n    };\r\n})();\r\n",
  "references": []
}
