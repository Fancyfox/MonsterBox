{
  "code": "function traverse(node, callback) {\r\n    callback.runWith(node);\r\n    if (node.numChildren > 0)\r\n        for (let i = 0; i < node.numChildren; i++)\r\n            traverse(node.getChildAt(i), callback);\r\n}\r\nexport default (function () {\r\n    Laya.Node.prototype.find = function (path) {\r\n        let self = this;\r\n        if (!path)\r\n            return self;\r\n        let arr = path.split('/');\r\n        let cur = self;\r\n        while (arr.length > 0) {\r\n            cur = cur.getChildByName(arr.shift());\r\n            if (!cur)\r\n                return null;\r\n        }\r\n        return cur;\r\n    };\r\n    Laya.Node.prototype.findChild = function (name) {\r\n        let self = this;\r\n        for (let i = 0; i < self.numChildren; i++) {\r\n            let n = self.getChildAt(i);\r\n            if (n.name === name)\r\n                return n;\r\n            else {\r\n                if (n.numChildren > 0) {\r\n                    let ret = n.findChild(name);\r\n                    if (ret.name === name)\r\n                        return ret;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Laya.Node.prototype.traverse = function (call) {\r\n        let h = new Laya.Handler(Laya.Node.prototype, call);\r\n        traverse(this, h);\r\n        h.recover();\r\n    };\r\n})();\r\n",
  "references": []
}
